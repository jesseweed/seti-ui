@import "icon-variables";
@import "icon-font";
@import "ui-mixins";



// - - - - - - - - - - - - - - -
// ICONS BASED ON FILE EXTENSION
// - - - - - - - - - - - - - - -



// PROJECT / REPO ICON
.name.icon.icon-repo {

  // TEXT
  font-weight: bold;
  padding: 0px 0px 0px 5px;

  // ICON
  &:before {

  }

}


// OPEN/CLOSE SELECTOR FOR FOLDERS
.header.list-item:before {
  color: @color-default;
}

// DIRECTORY ICONS
.name.icon.icon-file-directory {

  // TEXT
  background: none;
  border: none;
  color: @color-default;
  font-weight: bold;
  padding: 0px 0px 0px 2px;

  // ICON
  &:before {
    color: @color-default;
  }
}


// DEFAULT / FALLBACK ICON
.name.icon {
  padding: 0;

  &:before {
    color: @color-default;
  }

}

// DEFAULT TAB ICON
tabs-bar tabs-tab .title, .tab-bar .tab .title {
  padding: 0;
  width: 100%;

  &:before {
    color: @color-default;
  }
}


tabs-bar tabs-tab.active .title, .tab-bar .tab.active .title {

}

// HIDDEN / IGNORED STYLES

.status-ignored {

  .header.list-item:before {
    color: @text-color-ignored;
  }

  .name.icon {
    color: @text-color-ignored;

    &:before {
      color: @text-color-ignored;
    }

  }

}


/* .icon-tab(extension, type, font-size, top, right, left, offset)
default = '', '', 20px, 6px, -3px, -5px, -4px

.icon-tree(extension, type, font-size, top, right, left, offset)
default = '', '', 20px, 6px, 0px, -5px, -4px */



tabs-bar tabs-tab .title.icon-tools, .tab-bar .tab .title.icon-tools {
  padding: 0;
  width: 100%;

  &:before {
    position: relative;
    color: @color-settings;
  }
}


// CSS
.icon-tab('.css', css);
.icon-tree('.css', css);

// CSON
.icon-tab('.cson', 'json');
.icon-tree('.cson', 'json');

// Handlebars
.icon-tab('.hbs', 'handlebars');
.icon-tree('.hbs', 'handlebars');
.icon-tab('.handlebars', 'handlebars');
.icon-tree('.handlebars', 'handlebars');
.icon-tab('.hjs', 'handlebars');
.icon-tree('.hjs', 'handlebars');

// Hidden files
.icon-tab('.gitignore', 'hidden');
.icon-tree('.gitignore', 'hidden');

.icon-tab('.gitmodules', 'hidden');
.icon-tree('.gitmodules', 'hidden');

.icon-tab('.config', 'hidden');
.icon-tree('.config', 'hidden');

.icon-tab('.DS_Store', 'hidden');
.icon-tree('.DS_Store', 'hidden');


// HTML
.icon-tab('.html', 'html');
.icon-tree('.html', 'html');

// Jade
.icon-tab('.jade', 'jade');
.icon-tree('.jade', 'jade');

// JavaScript
.icon-tab('.js', 'js');
.icon-tree('.js', 'js');
.icon-tab('.es', 'js');
.icon-tree('.es', 'js');
.icon-tab('.es6', 'js');
.icon-tree('.es6', 'js');

// Coffescript
.icon-tab('.coffee', 'coffee');
.icon-tree('.coffee', 'coffee');

// JSON
.icon-tab('.json', 'json');
.icon-tree('.json', 'json');

// React
.icon-tab('.jsx', 'jsx');
.icon-tree('.jsx', 'jsx');
.icon-tab('.cjsx', 'jsx');
.icon-tree('.cjsx', 'jsx');

// LESS
.icon-tab('.less', 'less');
.icon-tree('.less', 'less');

// LICENSE
.icon-tab('LICENSE', 'license');
.icon-tree('LICENSE', 'license');
.icon-tab('License', 'license');
.icon-tree('License', 'license');
.icon-tab('license', 'license');
.icon-tree('license', 'license');

// Markdown
.icon-tab('.md', 'md');
.icon-tree('.md', 'md');

// Override for Markdown package
tabs-bar tabs-tab .title.icon-markdown[data-name*=".md"],
.tab-bar .tab .title.icon-markdown[data-name*=".md"] {
  top: 0;
}

// Mustache
.icon-tab('.mustache', 'mustache');
.icon-tree('.mustache', 'mustache');
.icon-tab('.mu', 'mustache');
.icon-tree('.mu', 'mustache');
.icon-tab('.stache', 'mustache');
.icon-tree('.stache', 'mustache');

// NPM
.icon-tab('npm-debug.log', 'npm');
.icon-tree('npm-debug.log', 'npm');
.icon-tab('.npmignore', 'npm');
.icon-tree('.npmignore', 'npm');

// PHP
.icon-tab('.php', 'php');
.icon-tree('.php', 'php');

// Procfile
.icon-tab('procfile', 'procfile');
.icon-tree('procfile', 'procfile');
.icon-tab('Procfile', 'procfile');
.icon-tree('Procfile', 'procfile');
.icon-tab('PROCFILE', 'procfile');
.icon-tree('PROCFILE', 'procfile');


// Python
.icon-tab('.py', 'py');
.icon-tree('.py', 'py');

// Ruby
.icon-tab('.rb', 'rb');
.icon-tree('.rb', 'rb');

// Sass
.icon-tab('.sass', 'sass');
.icon-tree('.sass', 'sass');
.icon-tab('.scss', 'sass');
.icon-tree('.scss', 'sass');

// Settings
.icon-tab('.svgx', 'img');
.icon-tree('.svgx', 'img');

// Stache
.icon-tab('.stache', 'stache');
.icon-tree('.stache', 'stache');

// Stylus
.icon-tab('.styl', 'styl');
.icon-tree('.styl', 'styl');

// TypeScript
.icon-tab('.ts', 'ts');
.icon-tree('.ts', 'ts');

// XML
.icon-tab('.xml', 'xml');
.icon-tree('.xml', 'xml');

// YML
.icon-tab('.yml', 'yml');
.icon-tree('.yml', 'yml');
.icon-tab('.yaml', 'yml');
.icon-tree('.yaml', 'yml');

// Golang
.icon-tab('.go', 'go');
.icon-tree('.go', 'go');

// Julia
.icon-tab('.jl', 'jl');
.icon-tree('.jl', 'jl');

// EJS
.icon-tab('.ejs', 'ejs');
.icon-tree('.ejs', 'ejs');

// Favicon
.icon-tab('.ico', 'ico');
.icon-tree('.ico', 'ico');

// Elm
.icon-tab('.elm', 'elm');
.icon-tree('.elm', 'elm');

// LiveScript
.icon-tab('.ls', 'ls');
.icon-tree('.ls', 'ls');

// IMAGES
.icon-tab('.ai', 'img');
.icon-tree('.ai', 'img');

.icon-tab('.bpm', 'img');
.icon-tree('.bpm', 'img');

.icon-tab('.gif', 'img');
.icon-tree('.gif', 'img');

.icon-tab('.jpeg', 'img');
.icon-tree('.jpeg', 'img');

.icon-tab('.jpg', 'img');
.icon-tree('.jpg', 'img');

.icon-tab('.png', 'img');
.icon-tree('.png', 'img');

.icon-tab('.psd', 'img');
.icon-tree('.psd', 'img');

.icon-tab('.svg', 'img');
.icon-tree('.svg', 'img');

.icon-tab('.svgx', 'img');
.icon-tree('.svgx', 'img');




// THESE NEED TO COME LAST SO THE DON'T GET OVERRIDEN!

// Bower
.icon-tab('bower.json', 'bower');
.icon-tree('bower.json', 'bower');
.icon-tab('Bower.json', 'bower');
.icon-tree('Bower.json', 'bower');
.icon-tab('BOWER.json', 'bower');
.icon-tree('BOWER.json', 'bower');
.icon-tab('.bowerrc', 'bower');
.icon-tree('.bowerrc', 'bower');


// Grunt
.icon-tab('gruntfile.js', 'grunt');
.icon-tree('gruntfile.js', 'grunt');
.icon-tab('Gruntfile.js', 'grunt');
.icon-tree('Gruntfile.js', 'grunt');
.icon-tab('GruntFile.js', 'grunt');
.icon-tree('GruntFile.js', 'grunt');
.icon-tab('GRUNTFILE.js', 'grunt');
.icon-tree('GRUNTFILE.js', 'grunt');
.icon-tab('gruntfile.coffee', 'grunt');
.icon-tree('gruntfile.coffee', 'grunt');
.icon-tab('Gruntfile.coffee', 'grunt');
.icon-tree('Gruntfile.coffee', 'grunt');
.icon-tab('GruntFile.coffee', 'grunt');
.icon-tree('GruntFile.coffee', 'grunt');
.icon-tab('GRUNTFILE.coffee', 'grunt');
.icon-tree('GRUNTFILE.coffee', 'grunt');


// Gulp
.icon-tab('gulpfile.js', 'gulp');
.icon-tree('gulpfile.js', 'gulp');
.icon-tab('Gulpfile.js', 'gulp');
.icon-tree('Gulpfile.js', 'gulp');
.icon-tab('GulpFile.js', 'gulp');
.icon-tree('GulpFile.js', 'gulp');
.icon-tab('GULPFILE.js', 'gulp');
.icon-tree('GULPFILE.js', 'gulp');
.icon-tab('gulpfile.coffee', 'gulp');
.icon-tree('gulpfile.coffee', 'gulp');
.icon-tab('Gulpfile.coffee', 'gulp');
.icon-tree('Gulpfile.coffee', 'gulp');
.icon-tab('GulpFile.coffee', 'gulp');
.icon-tree('GulpFile.coffee', 'gulp');
.icon-tab('GULPFILE.coffee', 'gulp');
.icon-tree('GULPFILE.coffee', 'gulp');


// - - - - - - -
// STATUS COLORS
// - - - - - - -

// STATUS: ADDED
.directory.entry.list-nested-item.status-added > .header.list-item {

  // OPEN/CLOSE SELECTOR
  &:before {
    color: @color-status-added;
  }

  // DIRECTORY
  .name.icon.icon-file-directory {

    // TEXT
    color: @color-status-added;

    // ICON
    &:before {
      color: @color-status-added;
    }
  }

}

  .file.entry.list-item.status-added {

    .name.icon {

      // TEXT
      color: @color-status-added;

      // ICON
      &:before {
        color: @color-status-added !important;
      }

      &.icon-file-text:before {
        color: @color-status-added;
      }
    }
  }


// STATUS: MODIFIED
.directory.entry.list-nested-item.status-modified > .header.list-item {

  // OPEN/CLOSE SELECTOR
  &:before {
    color: @color-status-modified;
  }

  // DIRECTORY
  .name.icon.icon-file-directory {

    // TEXT
    color: @color-status-modified;

    // ICON
    &:before {
      color: @color-status-modified;
    }
  }

}


  .file.entry.list-item.status-modified {
    .name.icon {

      // TEXT
      color: @color-status-modified;

      // ICON
      &:before {
        color: @color-status-modified;
      }
    }
  }


// STATUS: IGNORED
.directory.entry.list-nested-item.status-ignored {

  // OPEN/CLOSE SELECTOR
  .header.list-item {
    &:before {
      color: @color-status-ignored;
    }
  }

  // DIRECTORY
  .name.icon.icon-file-directory {

    // TEXT
    color: @color-status-ignored;

    // ICON
    &:before {
      color: @color-status-ignored;
    }
  }

}


  .file.entry.list-item.status-ignored {
    .name.icon {

      // TEXT
      color: @color-status-ignored;

      // ICON
      &:before {
        color: @color-status-ignored;
      }
    }
  }


// STATUS: REMOVED
.directory.entry.list-nested-item.status-removed {

  // OPEN/CLOSE SELECTOR
  .header.list-item {
    &:before {
      color: @color-status-removed;
    }
  }

  // DIRECTORY
  .name.icon.icon-file-directory {

    // TEXT
    color: @color-status-removed;

    // ICON
    &:before {
      color: @color-status-removed;
    }
  }

}

  // FILE
  .file.entry.list-item.status-removed {
    .name.icon {

      // TEXT
      color: @color-status-removed;

      // ICON
      &:before {
        color: @color-status-removed;
      }
    }
  }


// STATUS: RENAMED
.directory.entry.list-nested-item.status-renamed {

  // OPEN/CLOSE SELECTOR
  .header.list-item {
    &:before {
      color: @color-status-renamed;
    }
  }

  // DIRECTORY
  .name.icon.icon-file-directory {

    // TEXT
    color: @color-status-renamed;

    // ICON
    &:before {
      color: @color-status-renamed;
    }
  }

}

  // FILE
  .file.entry.list-item.status-renamed {
    .name.icon {

      // TEXT
      color: @color-status-renamed;

      // ICON
      &:before {
        color: @color-status-renamed;
      }
    }
  }
